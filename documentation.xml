<doc title>Doctor</doc>

<doc header>Doctor</doc>

<doc description>
	A tool to generate documentation quickly

	NPM Package: <a href='http://npm.com'>doctormake</a>

	Github Repo: <a href='http://github.com'>http://github.com</a>
</doc>

<doc section name='What Is It'>
	Doctor allows you to build documentation for your project through XML syntax. 
	
	It can be configured through some settings and different sections of the documentation can be created, which are fully HTML compatible.

	Then to generate the single HTML file output, the source file is passed to doctormake: <code>doctormake input.html</code>
	
	This is meant to be a simple one-page documentation generator, yet aiming to aid as much as possible on the work required to create documentations that fit the scope, in a quick painless manner.

	This is not a tool to automatically generate documentation from source code.
	
	For more advanced documentation needs, other more developed projects like <a target='_blank' href='https://readthedocs.org/'>Read the Docs</a> are recommended.

	The documentation you're reading was generated by Doctor.
</doc>

<doc section name='How Does It Work'>
	Doctor produces a single HTML file output, without external dependencies, which includes all Javascript and CSS.

	To do this, a file with all necessary data, which can have any name or extension, must be sent to doctormake.

	Inside the input file everything is configured through XML tags, so it having an .xml or .html extension is recommended.

	For example, this is how a simple input file might look like:
	
	<code>
		<doc header>My Project</doc>

		<description>The introduction to my project</description>
		
		<doc section name='What is it'>

			This is a section.

			I can use <b>Any HTML</b> here.

			Linebreaks are remembered, so it's easy to separate lines.

			I can use code samples:

			<code>

				var s = "This is a code sample"
				
				if(s)
				{
					console.log("Hello Doc")
				}

				<div>This is HTML</div>

			</code>

		</doc>

		<doc section name='Another Section'>

			Another part of the documentation.

			Every section is formatted accordingly.

			Every section creates an anchor link at the top and in the left menu.

		</doc>
	</code>

	Then that file is sent to doctormake: <code>doctormake /path/to/input/file /path/to/output/file</code>

	The input file path is required, however the output path is not. 

	If no output path is specified it will save it in the input's parent directory as "index.html".

</doc>

<doc section name='Basic Usage'>
	Doctor is meant to be a way for others to easily read the documentation.
	
	Sections are visually separated so it's easy to tell them apart.


	There are anchor links at the top for every section:

	<img src='https://i.imgur.com/ptSWDNA.jpg' width="400px">
	
	There are also anchor links in the left menu.
	The left menu is opened by clicking the colored edge:

	<img src='https://i.imgur.com/vtYuQQO.jpg' width="400px">


	There's a top menu that appears when the document is scrolled.
	The top menu has Prev, Top, Bottom, and Next buttons.
	Prev scrolls to a previous section.
	Next goes to the next section.
	Top goes to the top of the document.
	Bottom goes to the bottom of the document.
	Some buttons become faded depending on the scroll position.

	<img src='https://i.imgur.com/LxZcVok.jpg' width="400px">


	Smooth scrolling is enabled when jumping through sections.

	When images are clicked they are opened in a modal window:

	<img src='https://i.imgur.com/7yQinRi.png' width="400px">
	

	There is a feedback icon when jumping to sections, next to the header.
	This is to make it easy to know which section is the one you're looking for when there are multiple sections visible.
	The feedback blinks for a while and disappears:

	<img src='https://i.imgur.com/tBYKO79.gif' width="400px">
</doc>

<doc section name='Available Types'>

	The &lt;doc&gt; tag, which is used by Doctor to build the documentation, has several types available. They all end in &lt;/doc&gt;.


	<code><doc title></code>

	This is used to change the &lt;title&gt; of the document in &lt;head&gt;.


	<code><doc header></code>

	This is used to change the header of the documentation, the name of the project, at the very top.


	<code><doc description></code>

	The description of the project, which is shown right below the header.


	<code><doc theme></code>

	The documentation's color theme can be configured.
	The color specified here changes the color of the left menu, as well as the color of the links.
	A light color is not recommended because it will not contrast well with the white background.


	<code><doc style></code>

	Additional CSS you might want to add can go here. This is added after the default CSS declarations, at the bottom of &lt;head&gt;.


	<code><doc script></code>

	Additional Javascript you might want to add can go here. This is added after the default Javascript declarations, at the bottom of &lt;body&gt;.


	<code><doc favicon></code>

	Path to a desired favicon. If nothing is provided it will use a default one, which is hardcoded in the output file.


	<code><doc head></code>

	Any additional declarations you might want to add at the end of &lt;head&gt;.
	Processing is done to accept unescaped tags.


	<code><doc section name='Name Of The Section'></code>

	This is where the actual content of the documentation goes.
	The name of the section appears on top, with it's content below.
	Sections are separated by horizontal lines.
	Every section has an anchor link below the description at the top.
	An anchor link to it is also added to the left menu.


	<b>Special Tags</b>


	<code><code></code></code>

	This allows for code samples to be displayed.
	Processing is done to ensure everything is displayed correctly.
</doc>

<doc section name='Installation'>
	Doctor's NPM package is called doctormake.

	To use it as a command line tool do: <code>npm install -g doctormake</code>

	If you install it without the -g flag you need to run <code>npm install</code>
	
	And then to use it: <code>doctormake input output</code>

	To run it manually download a copy from [github link]

	Run <code>npm install</code> in the directory.

	And then to use it: <code>node doctor.js input output</code>
</doc>

<doc section name='Feedback'>
	If there's a problem regarding Doctor, or you have an idea to improve it, you can try submitting an Issue in the [githublink] where I might respond.
</doc>

<doc section name='License'>
	Doctor is licensed under <a target='_blank' href='http://www.apache.org/licenses/LICENSE-2.0'>Apache 2.0</a>
</doc>